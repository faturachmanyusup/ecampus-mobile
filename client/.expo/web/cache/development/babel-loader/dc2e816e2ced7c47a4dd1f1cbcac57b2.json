{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/faturcahman/Documents/Projects/ecampus-mobile/client/pages/Login.js\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { loginPost } from \"../fetch/userFetch\";\nimport { userContext } from \"../App\";\nexport default function Login() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(userContext),\n      setData = _useContext.setData;\n\n  function handleLogin() {\n    var res;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(loginPost({\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            res = _context.sent;\n\n            if (res && res.status == 200) {\n              setData(res);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../assets/login-background.jpg\"),\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.form,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    autoCompleteType: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.textLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: [styles.form, styles.marginBottom],\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    autoCompleteType: \"password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  backgroundImage: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  wrapper: {\n    paddingVertical: hp(3),\n    paddingHorizontal: wp(4),\n    height: hp(40),\n    width: wp(60),\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 5\n  },\n  form: {\n    height: hp(4.7),\n    color: '#fff',\n    width: '100%',\n    backgroundColor: 'gray',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginVertical: hp(2),\n    paddingHorizontal: wp(2)\n  },\n  marginBottom: {\n    marginBottom: hp(5)\n  },\n  textLabel: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/faturcahman/Documents/Projects/ecampus-mobile/client/pages/Login.js"],"names":["React","useContext","useState","heightPercentageToDP","hp","widthPercentageToDP","wp","loginPost","userContext","Login","email","setEmail","password","setPassword","setData","handleLogin","res","status","require","styles","backgroundImage","wrapper","textLabel","form","text","marginBottom","StyleSheet","create","container","flex","justifyContent","alignItems","width","height","resizeMode","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","color","borderColor","borderWidth","marginVertical","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  View, TextInput,\n  Button, StyleSheet,\n  Text, ImageBackground\n} from 'react-native';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n} from 'react-native-responsive-screen';\nimport { loginPost } from '../fetch/userFetch';\nimport { userContext } from '../App';\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setData } = useContext(userContext);\n\n  async function handleLogin() {\n    const res = await loginPost({ email, password });\n    if(res && res.status == 200) {\n      setData(res);\n    }\n  }\n\n  return (\n    <ImageBackground\n      source={require('../assets/login-background.jpg')}\n      style={styles.backgroundImage}\n    >\n      <View style={styles.wrapper}>\n        <Text style={styles.textLabel}>Email</Text>\n        <TextInput\n          style={styles.form}\n          onChangeText={text => setEmail(text)}\n          autoCompleteType='email'\n        />\n        <Text style={styles.textLabel}>Password</Text>\n        <TextInput\n          style={[styles.form, styles.marginBottom]}\n          onChangeText={text => setPassword(text)}\n          autoCompleteType='password'\n          secureTextEntry\n        />\n        <Button\n          title=\"Login\"\n          onPress={() => handleLogin()}\n        />\n      </View>\n    </ImageBackground>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  backgroundImage: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  wrapper: {\n    paddingVertical: hp(3),\n    paddingHorizontal: wp(4),\n    height: hp(40),\n    width: wp(60),\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 5,\n  },\n  form: {\n    height: hp(4.7),\n    color: '#fff',\n    width: '100%',\n    backgroundColor: 'gray',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginVertical: hp(2),\n    paddingHorizontal: wp(2),\n  },\n  marginBottom: {\n    marginBottom: hp(5)\n  },\n  textLabel: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});"]},"metadata":{},"sourceType":"module"}