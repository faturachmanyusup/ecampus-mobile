{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/faturcahman/Documents/Projects/ecampus-mobile/client/pages/Login.js\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { loginPost } from \"../fetch/userFetch\";\nimport { userContext } from \"../App\";\nexport default function Login(props) {\n  console.log(props);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function handleLogin(props) {\n    var token;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(loginPost({\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            token = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@userToken\", token));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(userContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/login-background.jpg\"),\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.form,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    autoCompleteType: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.textLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: [styles.form, styles.marginBottom],\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    autoCompleteType: \"password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  wrapper: {\n    paddingVertical: hp(3),\n    paddingHorizontal: wp(4),\n    height: hp(50),\n    width: wp(60),\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 5\n  },\n  form: {\n    height: hp(4.7),\n    color: '#fff',\n    width: '100%',\n    backgroundColor: 'gray',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginVertical: hp(2),\n    paddingHorizontal: wp(2),\n    paddingVertical: hp(2)\n  },\n  marginBottom: {\n    marginBottom: hp(5)\n  },\n  textLabel: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/faturcahman/Documents/Projects/ecampus-mobile/client/pages/Login.js"],"names":["AsyncStorage","React","useState","heightPercentageToDP","hp","widthPercentageToDP","wp","loginPost","userContext","Login","props","console","log","email","setEmail","password","setPassword","handleLogin","token","setItem","require","styles","container","wrapper","textLabel","form","text","marginBottom","StyleSheet","create","flex","justifyContent","alignItems","width","height","resizeMode","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","color","borderColor","borderWidth","marginVertical","fontWeight"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\nimport React, {useState } from 'react';\nimport {\n  View, TextInput,\n  Button, StyleSheet,\n  Text, ImageBackground\n} from 'react-native';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n} from 'react-native-responsive-screen';\nimport { loginPost } from '../fetch/userFetch';\nimport { userContext } from '../App';\n\nexport default function Login(props) {\n  console.log(props)\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function handleLogin(props) {\n    const token = await loginPost({email, password});\n    await AsyncStorage.setItem(\"@userToken\", token);\n  }\n  \n  return (\n    <userContext.Consumer>\n      <ImageBackground\n        source={require('../assets/login-background.jpg')}\n        style={styles.container}\n      >\n        <View style={styles.wrapper}>\n          <Text style={styles.textLabel}>Email</Text>\n          <TextInput\n            style={styles.form}\n            onChangeText={text => setEmail(text)}\n            autoCompleteType='email'\n          />\n          <Text style={styles.textLabel}>Password</Text>\n          <TextInput\n            style={[styles.form, styles.marginBottom]}\n            onChangeText={text => setPassword(text)}\n            autoCompleteType='password'\n            secureTextEntry\n          />\n          <Button\n            title=\"Login\"\n            onPress={() => handleLogin()}\n          />\n        </View>\n      </ImageBackground>\n    </userContext.Consumer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  wrapper: {\n    paddingVertical: hp(3),\n    paddingHorizontal: wp(4),\n    height: hp(50),\n    width: wp(60),\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 5,\n  },\n  form: {\n    height: hp(4.7),\n    color: '#fff',\n    width: '100%',\n    backgroundColor: 'gray',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginVertical: hp(2),\n    paddingHorizontal: wp(2),\n    paddingVertical: hp(2)\n  },\n  marginBottom: {\n    marginBottom: hp(5)\n  },\n  textLabel: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});"]},"metadata":{},"sourceType":"module"}